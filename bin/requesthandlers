
var querystring = require("querystring"),
	exec = require("child_process").exec, 
	fs = require('fs'),
	formidable = require("formidable"),
	ejs = require("ejs");

/*
//index.html page import
var page = "";
		fs.readFile('index.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
			} else {
				page = data;
				console.log("page");
			}
		});
console.log(page);
*/


//загружаем базовый шаблон страницы
var template = fs.readFileSync('./templates/structure.ejs', {encoding: 'utf-8'}, function(err, data) {
	if(err) {
		console.error(err);
		return  err;
	} else {
		return data;
	}
});
console.log(' template = \n' + template +'\n');



//загрузка главной страницы
function uploader( pathname, res, req ) {
	exec("", function(error, stdout, stderr){
		console.log("Request handler 'start' was called.\n");
		
		var body ='<html>'+
		'<head>'+
		'<meta http-equiv="Content-Type" content="text/html; '+
		'charset=UTF-8" />'+
		'</head>'+
		'<body>'+
		'<div id="back" style="width:80px; height: 30px; background: red; position: fixed; top: 20px; left: 500px; text-align: center; line-height:0.8; padding-top: 8px;"><a href="/webdevelopment" style="display: block; width: 100%; height: 100%; cursor: pointer; font-size: 20px; text-decoration: none">back</a></div>'+
		'<form action="/submtext" '+
		'method="post"><fieldset><legend>Upload some text</legend>'+
		'<textarea name="text" rows="20" cols="60"></textarea>'+
		'<input type="submit" value="Submit text" />'+
		'</fieldset></form>'+
		'<form action="/upload" enctype ="multipart/form-data" '+
		'method="post"><fieldset><legend>Upload some img.jpg</legend>'+
		'<input type="file" name="upload">'+
		'<input type="submit" value="Upload file" />'+
		'</fieldset></form>'+
		'</body>'+
		'</html>';

		res.writeHead(200, {'Content-Type': 'text/html'});
		res.write(body);
		res.end();
	});
}


// раздел: web-разработка
function webdevelopment( pathname, res, req ) {
	exec("", function(error, stdout, stderr){
		/*
		// Load the specified template.
		var tmpl = fs.readFileSync("template.ejs", "utf-8");

		// Render the template using the specified data.
		var output = ejs.render(tmpl, {title:"Bub"});

		console.log(output);
		*/

		console.log("Request handler 'webdevelopment' was called.\n");
		
		var webdev = fs.readFileSync('webdev.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});
		
		var menu = fs.readFileSync('menu.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});

		console.log(' webdev = ' + webdev +'\n');
		console.log(' menu = ' + menu+'\n');

		var body = ejs.render(template, {topmenu: menu, content: webdev });
		
		console.log('body = '+ body + " \n");

		res.writeHead(200, {'Content-Type': 'text/html'});
		res.write(body);
		res.end();
	});	
}


// раздел: web-разработка/вёрстка
function pageproofs( pathname, res, req ) {
	exec("", function(error, stdout, stderr){
		console.log("Request handler 'pageproofs' was called.\n");
		
		var pageproofs = fs.readFileSync('pageproofs.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});
		
		var menu = fs.readFileSync('menu.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});

		console.log(' pageproofs = ' + pageproofs +'\n');
		console.log(' menu = ' + menu+'\n');

		var body = ejs.render(template, {topmenu: menu, content: pageproofs });
		
		console.log('body = '+ body + " \n");

		res.writeHead(200, {'Content-Type': 'text/html'});
		res.write(body);
		res.end();
	});
}

// раздел: web-разработка/программы [JS]
function programs( pathname, res, req ) {
	exec("", function(error, stdout, stderr){
		console.log("Request handler 'programs' was called.\n");
		
		var programs = fs.readFileSync('programs.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});
		
		var menu = fs.readFileSync('menu.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});

		console.log(' programs = ' + programs +'\n');
		console.log(' menu = ' + menu+'\n');

		var body = ejs.render(template, {topmenu: menu, content: programs });
		
		console.log('body = '+ body + " \n");

		res.writeHead(200, {'Content-Type': 'text/html'});
		res.write(body);
		res.end();
	});
}

// раздел: web-разработка/приложения [Html+Css+JS]
function webapps( pathname, res, req ) {
	exec("", function(error, stdout, stderr){
		console.log("Request handler 'webapps' was called.\n");
		
		var webapps = fs.readFileSync('webapps.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});
		
		var menu = fs.readFileSync('menu.html', {encoding: 'utf-8'}, function(err, data) {
			if(err) {
				console.error(err);
				return err;
			} else {
				return data;
			}
		});

		console.log(' webapps = ' + webapps +'\n');
		console.log(' menu = ' + menu+'\n');

		var body = ejs.render(template, {topmenu: menu, content: webapps });
		
		console.log('body = '+ body + " \n");

		res.writeHead(200, {'Content-Type': 'text/html'});
		res.write(body);
		res.end();
	});
}


//загрузка текста
function submtext( pathname, res, req ) {
		console.log("Request handler 'submtext' was called.\n");
		var postData = "";
		
		/*
		var obj1 = new function(res) {
			res.writeHead(200, {'Content-Type': 'text/plain'});
			res.write('Hello, I can upload text!\n');
			res.write('Request for ' + pathname + ' received!\nYou have sent the text: ' + querystring.parse(postData).text);
			res.end();
		}
		*/

		req.setEncoding("utf8");

		req.addListener("data", function(postDataChunk){
			postData +=postDataChunk
			console.log("Received POST data chunk '" + postDataChunk + "'.");
		});

		req.addListener("end", function() {
			res.writeHead(200, {'Content-Type': 'text/plain'});
			res.write('Hello, I can upload text!\n');
			res.write('Request for ' + pathname + ' received!\nYou have sent the text: ' + querystring.parse(postData).text);
			res.end();
		});
}


//загрузка файлов
function upload( pathname, res, req ) {
	console.log("Request handler 'upload' was called.\n");
	
	var form = new formidable.IncomingForm();
	console.log("about to parse");
	form.parse(req, function(error, fields, files) {
		console.log("parsing done");
		
		fs.rename(files.upload.path, "./tmp/test.jpg", function(err) {
			if (err) {
				fs.unlink("./tmp/test.jpg");
				fs.rename(files.upload.path, "./tmp/test.jpg");
			}
		});
		res.writeHead(200, {'Content-Type': 'text/html'});
		res.write('Received image:<br/>');
		res.write('<img src="/gallery">');
		res.end();
	});
}


//отображение содержимого папки /tmp
function gallery( pathname, res, req ) {
	console.log("Request handler 'show' was called.");
	
	fs.readFile("./tmp/test.jpg", "binary", function(error, file) {
		if(error) {
			res.writeHead(500, {"Content-Type": "text/plain"});
			res.write(err + "\n");
			res.end();
		} else {
			res.writeHead(200, {"Content-Type": "image/jpg"});
			res.write(file, "binary");
			res.end();
		}
	});
}

exports.uploader = uploader;
exports.webdevelopment = webdevelopment;
exports.pageproofs = pageproofs;
exports.programs = programs;
exports.webapps = webapps;
exports.submtext = submtext;
exports.upload = upload;
exports.gallery = gallery;